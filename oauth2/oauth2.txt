
Resource Owner
Client 
Authorization Server
Resource Server


Client Types

Confidential Client -- can keep client secret safe
Public Client -- can not  keep client id client secret safe


Claims -- data passed in tokens ex:userid,expiry time

OpenId -- Id token 
  Claims and scope(openid)
  
Server Side Web App -- Authorization code
Server Side without UI -- Clien Credentials
JavaScript SPA -- PKCE Enhanced Authorization Code
Native Mobile Apps --  Authorization code,PKCE Enhanced Authorization Code
Device like playstation -- Device Code


Depricated: Implicit type,Password Grant

Refresh Token type

PKCE -- Proof Key For Code Exchange
  
  code_challenge_method== either S256 or plain
  code_challenge_value 
  code_verifier_value
  
first generate   code_verifier_value then code_challenge_value based on code_verifier

send code_challenge in  get request and code_verifier in post request
  
grant_type(param) either authorization_code or client_credentials etc .. in post request 

client_credentials -- machine to machine( in microservices one service to other)







